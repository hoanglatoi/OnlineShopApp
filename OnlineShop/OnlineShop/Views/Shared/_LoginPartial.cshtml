@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@*@if (SignInManager.IsSignedIn(User))*@
@if (User.Identity.IsAuthenticated)
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"> 
                @if(User.Claims.FirstOrDefault(x => x.Type == "UserName") != null)
                {
                    @User.Claims.FirstOrDefault(x => x.Type == "UserName")?.Value
                }else{
                    @User.Identity?.Name
                }
        </a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="~/Home/Index">
            <button  type="submit" class="nav-link btn btn-link text-dark" formmethod="post">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/LoginAdmin">Login Admin</a>
    </li>
}
</ul>
